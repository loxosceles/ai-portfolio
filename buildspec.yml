version: 0.2

env:
  variables:
    ENVIRONMENT: dev # Default, will be overridden by pipeline parameter
    DEV_DATA_BUCKET_NAME: portfolio-development-data
    PROD_DATA_BUCKET_NAME: portfolio-production-data

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      - echo "Preparing build environment..."
      # Clean up any existing node_modules
      - rm -rf node_modules
      - find . -name "node_modules" -type f -delete
      # Install pnpm
      - npm install -g pnpm
      # Install dependencies with modified flags
      - pnpm install --frozen-lockfile

  pre_build:
    commands:
      - echo "Deploying infrastructure for $ENVIRONMENT environment"
      - cd infrastructure && pnpm run deploy:$ENVIRONMENT && cd ..

  build:
    commands:
      - echo "Setting up data for $ENVIRONMENT environment"
      - node infrastructure/lib/data-management/create-bucket.mjs $ENVIRONMENT
      - node infrastructure/lib/data-management/download-static-data.mjs $ENVIRONMENT
      - echo "Updating environment variables"
      - ENVIRONMENT=$ENVIRONMENT node infrastructure/lib/data-management/update-env.mjs
      - echo "Deploying frontend for $ENVIRONMENT environment"
      - cd infrastructure && pnpm run deploy:frontend:$ENVIRONMENT && cd ..

  post_build:
    commands:
      - echo "Invalidating CloudFront cache"
      # Get CloudFront distribution ID from SSM Parameter Store
      - DISTRIBUTION_ID=$(aws ssm get-parameter --name "/portfolio/${ENVIRONMENT}/WEB_CLOUDFRONT_DISTRIBUTION_ID" --region us-east-1 --query 'Parameter.Value' --output text)
      - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*" --region us-east-1
      # Get domain from SSM Parameter Store
      - DOMAIN=$(aws ssm get-parameter --name "/portfolio/${ENVIRONMENT}/WEB_CLOUDFRONT_DOMAIN" --region us-east-1 --query 'Parameter.Value' --output text)
      - echo "Deployment complete. Website available at https://$DOMAIN"

cache:
  paths:
    - '.pnpm-store/**/*'
